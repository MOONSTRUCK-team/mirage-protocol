type Nat = nat;
type Principal = principal;
type TransferError = variant {
  Unauthorized: record { token_ids: vec Nat };
  TokenAlreadyExists: record { token_id: Nat };
  TokenNotFound: record { token_id: Nat };
  InsufficientBalance: record { token_id: Nat };
  InvalidMetadata: record { token_id: Nat };
};

type MintArgs = record {
  token_id: Nat;
};

service : {
  mint: (MintArgs) -> (variant { Ok: Nat; Err: TransferError });
  token_mint: (MintArgs) -> (variant { Ok: Nat; Err: text });
}
