service : {
  init_contract: (text, text, vec principal) -> ();
  mint: (record { to: record { owner: principal; subaccount: opt vec nat8 }; token_id: nat; metadata: vec record { key: text; value: text } }) -> (variant { Ok: nat; Err: variant { Unauthorized: record { token_ids: vec nat } } });
  transfer: (vec record { from: record { owner: principal; subaccount: opt vec nat8 }; to: record { owner: principal; subaccount: opt vec nat8 }; token_ids: vec nat }) -> (vec opt variant { Ok: nat; Err: variant { Unauthorized: record { token_ids: vec nat } } });
  burn: (nat) -> (variant { Ok: nat; Err: variant { Unauthorized: record { token_ids: vec nat } } });
  mint_from_message: (record { id: text; nonce: nat64; op_type: nat8; src_chain_id: nat64; dest_chain_id: nat64; dest_address: text; contract_address: text; token_id: nat64 }) -> (variant { Ok: nat; Err: variant { Unauthorized: record { token_ids: vec nat } } });
}
